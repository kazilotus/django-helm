FROM caddy:2.5.1 AS caddy-builder

FROM --platform=linux/amd64 python:3.9-slim

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Create a group and user to run our app
ARG APP_USER=todo
RUN groupadd -r ${APP_USER} && useradd --no-log-init -r -g ${APP_USER} ${APP_USER}

# Install packages needed to run your application (not build deps):
#   mime-support -- for mime types when serving static files
#   postgresql-client -- for running database commands
# We need to recreate the /usr/share/man/man{1..8} directories first because
# they were clobbered by a parent image.
RUN set -ex \
    && RUN_DEPS=" \
    libpcre3 \
    mime-support \
    postgresql-client \
    build-essential \
    " \
    && seq 1 8 | xargs -I{} mkdir -p /usr/share/man/man{} \
    && apt-get update \
    && apt-get install -y --no-install-recommends $RUN_DEPS \
    && rm -rf /var/lib/apt/lists/*

# Copy your application code to the container (make sure you create a .dockerignore file if any large files or directories should be excluded)
ENV APP_HOME=/app/
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

COPY ./Pipfile ./Pipfile
COPY ./Pipfile.lock ./Pipfile.lock
RUN pip install pipenv
RUN pipenv install --dev

ADD . $APP_HOME

# Fix ownership permissions
RUN chown -R ${APP_USER}:${APP_USER} $APP_HOME

# Add any static environment variables needed by Django or your settings file here:
ENV DJANGO_SETTINGS_MODULE=project.local

# Call collectstatic (customize the following line with the minimal environment variables needed for manage.py to run):
RUN pipenv run python manage.py collectstatic --noinput

# Tell uWSGI where to find your wsgi file (change this):
ENV UWSGI_WSGI_FILE=project/wsgi.py
# Base uWSGI configuration (you shouldn't need to change these):
ENV UWSGI_HTTP=:9000 UWSGI_MASTER=1
ENV UWSGI_HTTP_AUTO_CHUNKED=1 UWSGI_HTTP_KEEPALIVE=1 UWSGI_LAZY_APPS=1 UWSGI_WSGI_ENV_BEHAVIOR=holy
# Number of uWSGI workers and threads per worker (customize as needed):
ENV UWSGI_WORKERS=2 UWSGI_THREADS=4
# uWSGI static file serving configuration (customize or comment out if not needed):
# ENV UWSGI_STATIC_MAP="/static/=/app/static/" UWSGI_STATIC_EXPIRES_URI="/static/.*\.[a-f0-9]{12,}\.(css|js|png|jpg|jpeg|gif|ico|woff|ttf|otf|svg|scss|map|txt) 315360000"

# Install Caddy Binary
COPY --from=caddy-builder /usr/bin/caddy /usr/bin/caddy

# Uncomment after creating your docker-entrypoint.sh
ENTRYPOINT ["/app/entrypoint.sh"]

# Expose HTTP Endpoint
EXPOSE 80

# Start uWSGI
CMD ["supervisord"]