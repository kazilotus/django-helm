# - hosts: all
#   connection: local
#   roles:
#     # - build

- hosts: localhost
  connection: local
  become: false
  vars:
    brew_packages:
      - podman
      - minikube
      - kubectl
      - helm
      - helmfile
      - mkcert
      - nss
    install_homebrew_if_missing: true
    upgrade_homebrew_packages: false

  pre_tasks:
    - name: Ensuring Homebrew Is Installed
      stat:
        path: /opt/homebrew/bin/brew
      register: homebrew_check

    - name: Fail If Homebrew Is Not Installed and install_homebrew_if_missing Is False
      fail:
        msg: Homebrew is missing...Install from http://brew.sh/
      when:
        - not homebrew_check.stat.exists
        - not install_homebrew_if_missing

    - name: Installing Homebrew
      shell: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      when:
        - not homebrew_check.stat.exists
        - install_homebrew_if_missing

  tasks:
    - name: Updating Homebrew
      homebrew:
        update_homebrew: true
      when: homebrew_check.stat.exists

    - name: Upgrading Homebrew Packages
      homebrew:
        upgrade_all: "{{ upgrade_homebrew_packages }}"
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    # Install all dependency packages

    - name: Installing Homebrew Packages
      homebrew:
        path: /opt/homebrew/bin/brew
        name: "{{ brew_packages }}"
        state: present
      register: result
      until: result is successful
      when: homebrew_check.stat.exists

    # Setup podman

    - name: Initiate a podman machine with 2 CPU and 2GB RAM
      ansible.builtin.command: /opt/homebrew/bin/podman machine init --cpus 2 --memory 2048 --rootful
      register: podman_init_output
      failed_when: 
        - podman_init_output.stderr != ''
        - '"already exists" not in podman_init_output.stderr'

    - name: Start Podman Machine
      ansible.builtin.command: /opt/homebrew/bin/podman machine start
      register: podman_start_output
      failed_when: 
        - podman_start_output.stderr != ''
        - '"already running" not in podman_start_output.stderr'

    # Minikube

    - name: Start Minikube
      ansible.builtin.command: /opt/homebrew/bin/minikube start --kubernetes-version=v1.24.1 --driver=podman

    # Install plugins

    - name: Install helm-diff plugin for helmfile
      ansible.builtin.command: /opt/homebrew/bin/helm plugin install https://github.com/databus23/helm-diff
      register: helm_diff_output
      failed_when: 
        - helm_diff_output.stderr != ''
        - '"already exists" not in helm_diff_output.stderr'

    # Generate and install self signed trusted tls certificates

    - name: Install and generate mkcert root CA
      ansible.builtin.command: /opt/homebrew/bin/mkcert -install
      environment:
        CAROOT: .

    - name: Upload mkcert root CA in k8s as secret
      ansible.builtin.shell: /opt/homebrew/bin/kubectl create secret tls mkcert-ca-tls-secret --key=rootCA-key.pem --cert=rootCA.pem -n security --dry-run=client -o yaml | kubectl apply -f -

    # Build docker image

    # Deploy helmfile
    - name: Deploy all helmcharts
      ansible.builtin.command: /opt/homebrew/bin/helmfile apply
      args:
        chdir: ../helm/
      register: helmfile
    
    - name: Debug helmfile apply command
      debug: msg='{{helmfile.stdout_lines}}'